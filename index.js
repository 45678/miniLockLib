// Generated by CoffeeScript 1.10.0
(function() {
  var render;

  if (location.hostname === "45678.github.io" && location.protocol !== "https:") {
    window.location = location.toString().replace("http:", "https:");
  }

  $(document).ready(function(event) {
    var i, len, pre, ref, results;
    ref = document.querySelectorAll("pre");
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      pre = ref[i];
      if (pre.classList.contains("ecmascript")) {
        pre.classList.add("js");
      }
      results.push(hljs.highlightBlock(pre));
    }
    return results;
  });

  $(document).ready(function(event) {
    var id;
    if (location.hash) {
      id = location.hash.replace("#", "");
      return render({
        id: id
      });
    }
  });

  $(document).on("click", "a[href^='#']", function(event) {
    var id;
    id = event.currentTarget.href.toString().split("#")[1];
    return render({
      id: id
    });
  });

  $(document).on("mouseover", "body > header, #introduction, #setup, #examples", function(event) {
    var baseURL;
    baseURL = location.toString().split("#")[0];
    if (location.hash) {
      history.replaceState({}, "", baseURL);
    }
    return render();
  });

  $(document).on("mouseover", "body > article, article > div", function(event) {
    var baseURL, id;
    id = event.currentTarget.querySelector("a[id]").id;
    baseURL = location.toString().split("#")[0];
    if (location.hash !== ("#" + id)) {
      history.replaceState({}, "", baseURL + "#" + id);
    }
    return render({
      id: id
    });
  });

  render = function(options) {
    if (options == null) {
      options = {};
    }
    $("*.selected").removeClass("selected");
    if (options.id) {
      $("a[href='#" + options.id + "']").addClass("selected");
      return $(document.getElementById(options.id)).next("h1, h2").addClass("selected");
    }
  };

}).call(this);
