// Generated by CoffeeScript 1.7.1
(function() {
  var BLAKE2, BLAKE2HashDigest, Base58, ID;

  Base58 = require("./Base58");

  BLAKE2 = require("./BLAKE2s");

  ID = module.exports = {};

  ID.isAcceptable = function(id) {
    return /^[1-9A-Za-z]{40,55}$/.test(id) && (miniLockLib.ID.decode(id) != null);
  };

  ID.encode = function(publicKey) {
    var index, slots, _i;
    if ((publicKey != null ? publicKey.length : void 0) === 32) {
      slots = new Uint8Array(33);
      for (index = _i = 0; _i <= 32; index = ++_i) {
        slots[index] = publicKey[index];
      }
      slots[32] = BLAKE2HashDigest(publicKey, {
        length: 1
      })[0];
      return Base58.encode(slots);
    } else {
      return void 0;
    }
  };

  ID.decode = function(id) {
    var encodedChecksum, publicKey, slots, trueChecksum;
    slots = Base58.decode(id);
    if (slots.length === 33) {
      publicKey = new Uint8Array(slots.subarray(0, 32));
      encodedChecksum = slots[32];
      trueChecksum = BLAKE2HashDigest(publicKey, {
        length: 1
      })[0];
      if (encodedChecksum === trueChecksum) {
        return publicKey;
      }
    }
    return void 0;
  };

  BLAKE2HashDigest = function(input, options) {
    var hash;
    if (options == null) {
      options = {};
    }
    hash = new BLAKE2(options.length);
    hash.update(input);
    return hash.digest();
  };

}).call(this);
