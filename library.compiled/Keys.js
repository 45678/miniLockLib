// Generated by CoffeeScript 1.7.1
(function() {
  var BLAKE2, BLAKE2HashDigestOf, NACL, calculateCurve25519KeyPair, scrypt;

  BLAKE2 = require("./BLAKE2s");

  NACL = require("./NACL");

  scrypt = require("./scrypt-async");

  module.exports.makeKeyPair = function(secretPhrase, emailAddress, callback) {
    var decodedEmailAddress, decodedSecretPhrase, hashOfDecodedSecretPhrase;
    decodedSecretPhrase = NACL.util.decodeUTF8(secretPhrase);
    decodedEmailAddress = NACL.util.decodeUTF8(emailAddress);
    hashOfDecodedSecretPhrase = BLAKE2HashDigestOf(decodedSecretPhrase, {
      length: 32
    });
    return calculateCurve25519KeyPair(hashOfDecodedSecretPhrase, decodedEmailAddress, callback);
  };

  calculateCurve25519KeyPair = function(secret, salt, callback) {
    var dkLen, encoding, interruptStep, logN, r, whenKeysAreReady;
    whenKeysAreReady = function(encodedBytes) {
      var decodedBytes, keys;
      decodedBytes = NACL.util.decodeBase64(encodedBytes);
      keys = NACL.box.keyPair.fromSecretKey(decodedBytes);
      return callback(keys);
    };
    logN = 17;
    r = 8;
    dkLen = 32;
    interruptStep = 1000;
    encoding = "base64";
    return scrypt(secret, salt, logN, r, dkLen, interruptStep, whenKeysAreReady, encoding);
  };

  BLAKE2HashDigestOf = function(input, options) {
    var hash;
    if (options == null) {
      options = {};
    }
    hash = new BLAKE2(options.length);
    hash.update(input);
    return hash.digest();
  };

}).call(this);
