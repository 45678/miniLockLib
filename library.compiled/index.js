// Generated by CoffeeScript 1.8.0
(function() {
  var miniLockLib;

  miniLockLib = module.exports = {};

  miniLockLib.Keys = require("./Keys");

  miniLockLib.ID = require("./ID");

  miniLockLib.EncryptOperation = require("./EncryptOperation");

  miniLockLib.DecryptOperation = require("./DecryptOperation");

  miniLockLib.makeKeyPair = miniLockLib.Keys.makeKeyPair;

  miniLockLib.encrypt = function(params, callback) {
    if (callback) {
      params.callback = callback;
    }
    params.start = true;
    return new miniLockLib.EncryptOperation(params);
  };

  miniLockLib.decrypt = function(params, callback) {
    if (callback) {
      params.callback = callback;
    }
    params.start = true;
    return new miniLockLib.DecryptOperation(params);
  };

  miniLockLib.Base58 = require("./Base58");

  miniLockLib.BLAKE2s = require("./BLAKE2s");

  miniLockLib.NaCl = require("./NaCl");

  miniLockLib.scrypt = require("./scrypt-async");

  miniLockLib.zxcvbn = require("./zxcvbn");

  miniLockLib.ErrorMessages = {
    1: "General encryption error",
    2: "General decryption error",
    3: "Could not parse header",
    4: "Invalid header version",
    5: "Could not validate sender ID",
    6: "File is not encrypted for this recipient",
    7: "Could not validate ciphertext hash"
  };

}).call(this);
