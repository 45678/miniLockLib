// Generated by CoffeeScript 1.7.1
(function() {
  var BLAKE2, Base58, NACL, miniLockLib, scrypt, zxcvbn;

  miniLockLib = module.exports = {};

  miniLockLib.Keys = require("./Keys");

  miniLockLib.ID = require("./ID");

  miniLockLib.EncryptOperation = require("./EncryptOperation");

  miniLockLib.DecryptOperation = require("./DecryptOperation");

  miniLockLib.Base58 = Base58 = require("./Base58");

  miniLockLib.BLAKE2 = BLAKE2 = require("./BLAKE2s");

  miniLockLib.NACL = NACL = require("./NACL");

  miniLockLib.scrypt = scrypt = require("./scrypt-async");

  miniLockLib.zxcvbn = zxcvbn = require("./zxcvbn");

  miniLockLib.makeKeyPair = miniLockLib.Keys.makeKeyPair;

  miniLockLib.encrypt = function(params) {
    var callback, data, keys, miniLockIDs, name;
    data = params.data, name = params.name, miniLockIDs = params.miniLockIDs, keys = params.keys, callback = params.callback;
    return new miniLockLib.EncryptOperation({
      data: data,
      name: name,
      keys: keys,
      miniLockIDs: miniLockIDs,
      saveName: name + ".minilock",
      callback: callback,
      start: true
    });
  };

  miniLockLib.decrypt = function(params) {
    var callback, data, keys;
    data = params.data, keys = params.keys, callback = params.callback;
    return new miniLockLib.DecryptOperation({
      data: data,
      keys: keys,
      callback: callback,
      start: true
    });
  };

  miniLockLib.ErrorMessages = {
    1: "General encryption error",
    2: "General decryption error",
    3: "Could not parse header",
    4: "Invalid header version",
    5: "Could not validate sender ID",
    6: "File is not encrypted for this recipient",
    7: "Could not validate ciphertext hash"
  };

}).call(this);
